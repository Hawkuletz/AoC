#!/bin/bash
#bit operations!

bitcount=()

updbc()
{
	l=${#1}
	for (( i=0 ; i<$l ; i++ )) ; do
		case ${1:i:1} in
			'0')
				(( bitcount[i]-=1 ));;
			'1')
				(( bitcount[i]+=1 ));;
			*)
				echo "Undefined char encountered in $1 at $i"
				exit 1;;
		esac
	done
}

bctomcb()
{
# since bits are represented in big endian notation (i.e. array[0] is MOST SIGNIFICANT
# we have to perform some gymnastic in order to extract decimal numbers from this

# cp = current position (in array, starting at last element), i is used for bit shifting
# (i.e. i is the bit position, counting from LSB)
	cp=${#bitcount[@]}
	i=0
	vd=0
	vi=0
	while (( cp-- > 0 )) ; do
		if (( bitcount[cp]<0 )) ; then
			(( vi += 1<<i ))
		else
			(( vd += 1<<i ))
		fi
		(( i++ ))
	done
	echo "Direct = $vd"
	echo "Negate = $vi"
}

while IFS= read -r crt; do
	updbc $crt
done
bctomcb
