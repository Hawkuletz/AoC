#!/bin/bash

# since bash is not really fit for this, we'll have to make do
# with a lot of global variables
# max x, max y
mx=0
my=0
# working x,y
x=0
y=0
x0=0
x1=0
y0=0
y1=0
flines=()
map=()

setmaxxy()
{
	if (( x>mx )) ; then mx=$x ; fi
	if (( y>my )) ; then my=$y ; fi
}

# $1: coords (line from file), $2: 0=first pair, 1=second pair
getxy()
{
	if (($2==1)) ; then
		local v=${1%% *}
	else
		local v=${1##* }
	fi

	IFS=, read x y <<< "$v"
}

getpair()
{
	getxy "$1" 0
	x0=$x
	y0=$y
	getxy "$1" 1
	x1=$x
	y1=$y
}

setmaxpair()
{
	getxy "$1" 0
	setmaxxy
	getxy "$1" 1
	setmaxxy
}

initmap()
{
	mm=$((mx*my))
	for (( i=0 ; i<mm ; i++ )) ; do
		map[i]=0
	done
}

showmap()
{
	mm=$((mx*my))
	x=0
	for (( i=0 ; i<mm ; i++ )) ; do
		echo -n "${map[i]}"
		(( x++ ))
		if (( x>= mx )) ; then
			echo
			x=0
		fi
	done
}


drawhline()
{
	if (( x0 > x1 )) ; then
		tx=$x0
		x0=$x1
		x1=$tx
	fi

	start=$((y0*mx+x0))
	end=$((y0*mx+x1))
	for (( i=start ; i<=end ; i++ )) ; do
		(( map[i]++ ))
	done
}

drawvline()
{
	if (( y0 > y1 )) ; then
		ty=$y0
		y0=$y1
		y1=$ty
	fi

	start=$((y0*mx+x0))
	end=$((y1*mx+x0))
	echo "vline (at $x0; $y0-$y1) start at $start end at $end"
	for (( i=start ; i<=end ; i+=mx )) ; do
		(( map[i]++ ))
	done
}

drawline()
{
	getpair "$1"
	if (( x0 == x1 )) ; then
		drawvline
	elif (( y0 == y1 )) ; then
		drawhline
#	else
#		echo "Only vertical/horizontal lines are supported!" >&2
#		echo "Got $1" >&2
#		exit 1
	fi
}


while IFS= read crt ; do
	flines+=("$crt")
done
for ln in "${flines[@]}" ; do
	setmaxpair $ln
done
(( mx++ ))
(( my++ ))
initmap
showmap
for ln in "${flines[@]}" ; do
	drawline "$ln"
done
showmap

