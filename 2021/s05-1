#!/bin/bash

# since bash is not really fit for this, we'll have to make do
# with a lot of global variables
# max x, max y
mx=0
my=0
# working x,y
x=0
y=0
x0=0
x1=0
y0=0
y1=0
flines=()
map=()

setmaxxy()
{
	if (( x>mx )) ; then mx=$x ; fi
	if (( y>my )) ; then my=$y ; fi
}

# $1: coords (line from file), $2: 0=first pair, 1=second pair
getxy()
{
	if (($2==1)) ; then
		local v=${1%% *}
	else
		local v=${1##* }
	fi

	IFS=, read x y <<< "$v"
}

getpair()
{
	getxy "$1" 0
	x0=$x
	y0=$y
	getxy "$1" 1
	x1=$x
	y1=$y
}

setmaxpair()
{
	getxy "$1" 0
	setmaxxy
	getxy "$1" 1
	setmaxxy
}

initmap()
{
	mm=$((mx*my))
	for (( i=0 ; i<mm ; i++ )) ; do
		map[i]=0
	done
}

showmap()
{
	mm=$((mx*my))
	x=0
	c2=0
	for (( i=0 ; i<mm ; i++ )) ; do
#		echo -n "${map[i]}"
		(( x++ ))
		if (( x>= mx )) ; then
#			echo
			x=0
		fi
		if (( map[i]>1 )) ; then (( c2++ )) ; fi
	done
	echo "Intersections: $c2"
}


drawhline()
{
	if (( x0 > x1 )) ; then
		tx=$x0
		x0=$x1
		x1=$tx
	fi

	start=$((y0*mx+x0))
	end=$((y0*mx+x1))
	for (( i=start ; i<=end ; i++ )) ; do
		(( map[i]++ ))
	done
}

drawvline()
{
	if (( y0 > y1 )) ; then
		ty=$y0
		y0=$y1
		y1=$ty
	fi

	start=$((y0*mx+x0))
	end=$((y1*mx+x0))
	for (( i=start ; i<=end ; i+=mx )) ; do
		(( map[i]++ ))
	done
}

# increases map at (x,y)
plot()
{
	(( map[y*mx+x]++ ))
}	

drawdiagonal()
{
# let's start with a sanity check
	dx=$((x1-x0))
	dy=$((y1-y0))
	if (( dx!=dy && dx!=-dy )) ; then
		echo "Not a diagonal: dx=$dx, dy=$dy" >&2
		exit 1
	fi
	if (( dx>0 )) ; then sx=1 ; else sx=-1 ; fi
	if (( dy>0 )) ; then sy=1 ; else sy=-1 ; fi
	x=$x0
	y=$y0
	while (( x!=x1 )) ; do
		plot
		(( x+=sx ))
		(( y+=sy ))
	done
	plot
}


drawline()
{
	getpair "$1"
	if (( x0 == x1 )) ; then
		drawvline
	elif (( y0 == y1 )) ; then
		drawhline
	else
# assume diagonal
		drawdiagonal
#		echo "Only vertical/horizontal lines are supported!" >&2
#		echo "Got $1" >&2
#		exit 1
	fi
}




while IFS= read crt ; do
	flines+=("$crt")
done
for ln in "${flines[@]}" ; do
	setmaxpair $ln
done
(( mx++ ))
(( my++ ))
initmap
# showmap
for ln in "${flines[@]}" ; do
	drawline "$ln"
done
showmap

